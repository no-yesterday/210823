package spring01junittest;

import org.junit.Test;
//单元测试，在公司中，自己先测试完，请教队友问题时，一定要说，我junit 测试 没通过啊，bug是  XXXX，可以帮我看下吗
public class Spring01 {

    @Test
    public void test01(){
        System.out.println("1. 我是单元测试，在公司中，单元测试 是 java 程序员的 自己的 必须的测试，用来测试" +
                "dao 层 ,controller 层 ,是否能正常运行" +
                "2. 单元测试的 写法，必须是 @Test 注解，来自于 org.junit.Test 这个包，必须是 void 静态的 没有返回值的方法" +
                "3.方法名称和类名 最好 不可以 起名 test()  Test。java+" +
                "4.单元测试 是用来 代替main方法是测试的  ，main方法测试有一定的局限性，例如 无法测试 web项目，比如request 等"
        );
    }
    //反射： 是在jvm 虚拟机的类加载中，  .java文件 ------> class 文件 在这个转换期间
    //jvm 可以看到 类的 所有的 信息，比如 属性，方法，父类，接口 等
    //即： 反射 对于任意一个对象 都能够调用出他的任意方法和属性
    //这样的动态获取信息以及动态调用对象的方法的功能 叫做java的反射机制，不是 我们通俗讲的 镜面反射光线的反射
    //为什么要学反射？  因为反射就是 Spring 框架的底层实现
    //什么是解耦，   答：解耦就是 接触程序之间的耦合
    //什么是耦合？   答：耦合就是 程序之间 过于依赖了
    //什么叫做依赖？   答：依赖就是 A程序 调用 B 程序，A程序中 有 B程序的方法调用

    //先讲耦合
}
